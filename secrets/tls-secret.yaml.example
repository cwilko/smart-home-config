# Create server self-signed cert and key
#
# openssl genrsa -out cert/server.key 2048
# openssl req -nodes -new -x509 -sha256 -days 1825 -config cert/cert.conf -extensions 'req_ext' -key cert/server.key -out cert/server.crt
# openssl x509 -in cert/server.crt -text

# Create secret & sealed-secret
# Note: Secret needs to be in same namespace as the ingress location (e.g. marketinsights)
#
# kubectl create secret tls tls-secret -n marketinsights--key cert/server.key --cert cert/server.crt --dry-run=client -o yaml > tls-secret.yaml
# kubeseal -o yaml < tls-secret.yaml > tls-sealed-secret.yaml
#
# References:
# https://towardsdatascience.com/exposing-tensorflow-servings-grpc-endpoints-on-amazon-eks-e6877d3a51bd
# https://vocon-it.com/2018/12/31/kubernetes-6-https-applications-via-ingress-controller-on-minikube/

apiVersion: v1
data:
  tls.crt: <CERT INFO>
  tls.key: <KEY INFO>
kind: Secret
metadata:
  creationTimestamp: null
  name: tls-secret
  namespace: marketinsights
type: kubernetes.io/tls
